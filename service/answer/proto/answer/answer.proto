//声明proto本版
syntax = "proto3";
//服务名
package go.micro.service.answer;
//生成go文件的包路径
option go_package = "proto/answer";

//定义task服务的接口，主要是增删改查
//结构非常类似于go语言的interface定义，只是返回值必须用括号包裹，且不能使用基本类型作为参数或返回值
service AnswerService {
    rpc CreateAnswer(CreateAnswerParam)returns (CreateAnswerResponse){}
    rpc DeleteAnswer(AnswerID)returns(DeleteAnswerResponse){}
    rpc UpdateAnswer(AnswerInfo)returns (UpdateAnswerResponse){}
    rpc SearchAnswer(AnswerID)returns (SearchAnswerResponse){}
    rpc SearchAnswerByUserID(UserID)returns (SearchAnswerByUserIDResponse){}
    rpc SearchAnswerByHomeworkID(HomeworkID)returns (SearchAnswerByHomeworkIDResponse){}
    rpc SearchAnswerByUserIDAndHomeworkID(UserIDAndHomeworkID) returns (SearchAnswerByUserIDAndHomeworkIDResponse){}
    rpc PostAnswerByStudent(PostAnswerParam) returns (PostAnswerResponse){}
    rpc PostAnswerByTeacher(PostAnswerParam) returns (PostAnswerResponse){}
}

//Parameter protocol
message CreateAnswerParam{
    int64 commit_time = 1;
    string content = 2;
    string note = 3;
}

message AnswerID{
    int32 answerID = 1;
}

message AnswerInfo{
    int32 answerID = 1;
    int64 commit_time = 2;
    string content = 3;
    string note = 4;
}

message UserID{
    int32 userID = 1;
}

message HomeworkID{
    int32 homeworkID = 1;
}

message UserIDAndHomeworkID{
    int32 userID = 1;
    int32 homeworkID = 2;
}

message PostAnswerParam {
    int32 homeworkID = 1;
    int32 userID = 2;
    int64 commitTime = 3;
    string Content = 4;
    string Note = 5;
}
//Response protocol

message CreateAnswerResponse{
    enum Status {
        SUCCESS = 0;
        ERROR = -1;
    }
    Status status = 1;
    string msg = 2;
    int32 AnswerID = 3;
}


message DeleteAnswerResponse{
    enum Status {
        SUCCESS = 0;
        ERROR = -1;
    }
    Status status = 1;
    string msg = 2;
}

message UpdateAnswerResponse{
    enum Status {
        SUCCESS = 0;
        ERROR = -1;
    }
    Status status = 1;
    string msg = 2;
}

message SearchAnswerResponse{
    enum Status {
        SUCCESS = 0;
        ERROR = -1;
    }
    Status status = 1;
    string msg = 2;
    AnswerInfo answer = 3;
}

message SearchAnswerByUserIDResponse{
    enum Status {
        SUCCESS = 0;
        ERROR = -1;
    }
    Status status = 1;
    string msg = 2;
    repeated AnswerInfo answers = 3;
}

message SearchAnswerByHomeworkIDResponse{
    enum Status {
        SUCCESS = 0;
        ERROR = -1;
    }
    Status status = 1;
    string msg = 2;
    repeated AnswerInfo answers = 3;
}

message SearchAnswerByUserIDAndHomeworkIDResponse{
    enum Status{
        SUCCESS = 0;
        ERROR = 1;
    }
    Status status = 1;
    string msg = 2;
    AnswerInfo answer = 4;
}

message PostAnswerResponse{
    enum Status {
        SUCCESS = 0;
        ERROR = -1;
    }
    Status status = 1;
    string msg = 2;
    int32 AnswerID = 3;
}