//声明proto本版
syntax = "proto3";
//服务名
package go.micro.service.auth;
//生成go文件的包路径
option go_package = "proto/auth";

//定义task服务的接口，主要是增删改查
//结构非常类似于go语言的interface定义，只是返回值必须用括号包裹，且不能使用基本类型作为参数或返回值
service AuthService {
  rpc Login(User)returns (AuthResponse){}
}

message LoginInfo {
    string userName = 1;
    string password = 2;
}

message User {
    int32 userID = 1;
    int32 userType = 2;
    string userName = 3;
    string school = 4;
    string id = 5;
    string phone = 6;
    string email = 7;
}

message Data {
    User user=1;
}


message AuthResponse {
    enum Status {
        _eventAppend=itoa;
        SUCCESS = 200;       
        UNAUTHORIZED = 401;
        FOBIDDEN=403;
    }
    Status status=1;
    string msg=2;
    Data data=3;
}