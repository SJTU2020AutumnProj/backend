//声明proto本版
syntax = "proto3";
//服务名
package go.micro.service.auth;
//生成go文件的包路径
option go_package = "proto/auth";

//定义task服务的接口，主要是增删改查
//结构非常类似于go语言的interface定义，只是返回值必须用括号包裹，且不能使用基本类型作为参数或返回值
service AuthService {
  rpc Login(LoginParam)returns (LoginResponse){}
  rpc CheckAuth(CheckAuthParam)returns (CheckAuthResponse){}
  rpc Logout(LogoutParam)returns (LogoutResponse){}
}

message LoginParam {
    string userName = 1;
    string password = 2;
}

message CheckAuthParam {
    string token = 1;
}

message LogoutParam {
    string token = 1;
}

message UserData {
    int32 userID = 1;
    int32 userType = 2;
    string userName = 3;
    string password = 4;
    string school = 5;
    string id = 6;
    string phone = 7;
    string email = 8;
}

message LoginResponse {
    enum Status {
        SUCCESS = 0;
        ERROR = -1;
    }
    Status status = 1;
    string msg = 2;
    UserData data = 3;
    string token = 4;
}

message AuthData {
    int32 userID = 1;
    int32 userType = 2;
    string userName = 3;
    string password = 4;
}

message CheckAuthResponse {
    enum Status {
        SUCCESS = 0;
        INVALID_TOKEN = -1;
    }
    Status status = 1;
    string msg = 2;
    AuthData data = 3;
}

message LogoutResponse {
    enum Status {
        SUCCESS = 0;
        INVALID_TOKEN = -1;
    }
    Status status = 1;
    string msg = 2;
}