//声明proto本版
syntax = "proto3";
//服务名
package go.micro.service.check;
//生成go文件的包路径
option go_package = "proto/check";

//定义task服务的接口，主要是增删改查
//结构非常类似于go语言的interface定义，只是返回值必须用括号包裹，且不能使用基本类型作为参数或返回值
service CheckService {
    rpc CreateCheck(CreateCheckParam)returns (CreateCheckResponse){}
    rpc DeleteCheck(CheckID)returns(DeleteCheckResponse){}
    rpc UpdateCheck(CheckInfo)returns (UpdateCheckResponse){}
    rpc SearchCheck(CheckID)returns (SearchCheckResponse){}
    rpc SearchCheckByTeacherID(TeacherID)returns (SearchCheckByTeacherIDResponse){}
    rpc SearchCheckByHomeworkID(HomeworkID)returns (SearchCheckByHomeworkIDResponse){}
}

//Parameter protocol
message CreateCheckParam{
    int32 AnswerID = 1;
    int32 homeworkID = 2;
    int32 teacherID = 3;
    int64 checkTime = 4;
    string check_json = 5;
}

message CheckID{
    int32 CheckID = 1;
}

message CheckInfo{
    int32 CheckID = 1;
    int32 AnswerID = 2;
    int32 homeworkID = 3;
    int32 teacherID = 4;
    int64 checkTime = 5;
    string check_json = 6;
}

message TeacherID{
    int32 TeacherID = 1;
}

message HomeworkID{
    int32 HomeworkID = 1;
}

//Response protocol

message CreateCheckResponse{
    enum Status {
        SUCCESS = 0;
        ERROR = -1;
    }
    Status status = 1;
    string msg = 2;
    int32 CheckID = 3;
}


message DeleteCheckResponse{
    enum Status {
        SUCCESS = 0;
        ERROR = -1;
    }
    Status status = 1;
    string msg = 2;
}

message UpdateCheckResponse{
    enum Status {
        SUCCESS = 0;
        ERROR = -1;
    }
    Status status = 1;
    string msg = 2;
}

message SearchCheckResponse{
    enum Status {
        SUCCESS = 0;
        ERROR = -1;
    }
    Status status = 1;
    string msg = 2;
    CheckInfo check = 3;
}

message SearchCheckByTeacherIDResponse{
    enum Status {
        SUCCESS = 0;
        ERROR = -1;
    }
    Status status = 1;
    string msg = 2;
    repeated CheckInfo checks = 3;
}

message SearchCheckByHomeworkIDResponse{
    enum Status {
        SUCCESS = 0;
        ERROR = -1;
    }
    Status status = 1;
    string msg = 2;
    repeated CheckInfo checks = 3;
}