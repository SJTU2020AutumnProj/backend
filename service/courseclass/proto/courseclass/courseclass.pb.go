//声明proto本版

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: proto/courseclass/courseclass.proto

//服务名

package courseclass

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type EditResponse_Status int32

const (
	EditResponse_SUCCESS EditResponse_Status = 0
	EditResponse_ERROR   EditResponse_Status = -1
)

// Enum value maps for EditResponse_Status.
var (
	EditResponse_Status_name = map[int32]string{
		0:  "SUCCESS",
		-1: "ERROR",
	}
	EditResponse_Status_value = map[string]int32{
		"SUCCESS": 0,
		"ERROR":   -1,
	}
)

func (x EditResponse_Status) Enum() *EditResponse_Status {
	p := new(EditResponse_Status)
	*p = x
	return p
}

func (x EditResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EditResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_courseclass_courseclass_proto_enumTypes[0].Descriptor()
}

func (EditResponse_Status) Type() protoreflect.EnumType {
	return &file_proto_courseclass_courseclass_proto_enumTypes[0]
}

func (x EditResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EditResponse_Status.Descriptor instead.
func (EditResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_courseclass_courseclass_proto_rawDescGZIP(), []int{3, 0}
}

type SearchCourseClassResponse_Status int32

const (
	SearchCourseClassResponse_SUCCESS SearchCourseClassResponse_Status = 0
	SearchCourseClassResponse_ERROR   SearchCourseClassResponse_Status = -1
)

// Enum value maps for SearchCourseClassResponse_Status.
var (
	SearchCourseClassResponse_Status_name = map[int32]string{
		0:  "SUCCESS",
		-1: "ERROR",
	}
	SearchCourseClassResponse_Status_value = map[string]int32{
		"SUCCESS": 0,
		"ERROR":   -1,
	}
)

func (x SearchCourseClassResponse_Status) Enum() *SearchCourseClassResponse_Status {
	p := new(SearchCourseClassResponse_Status)
	*p = x
	return p
}

func (x SearchCourseClassResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchCourseClassResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_courseclass_courseclass_proto_enumTypes[1].Descriptor()
}

func (SearchCourseClassResponse_Status) Type() protoreflect.EnumType {
	return &file_proto_courseclass_courseclass_proto_enumTypes[1]
}

func (x SearchCourseClassResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchCourseClassResponse_Status.Descriptor instead.
func (SearchCourseClassResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_courseclass_courseclass_proto_rawDescGZIP(), []int{4, 0}
}

type SearchCourseClassesResponse_Status int32

const (
	SearchCourseClassesResponse_SUCCESS SearchCourseClassesResponse_Status = 0
	SearchCourseClassesResponse_ERROR   SearchCourseClassesResponse_Status = -1
)

// Enum value maps for SearchCourseClassesResponse_Status.
var (
	SearchCourseClassesResponse_Status_name = map[int32]string{
		0:  "SUCCESS",
		-1: "ERROR",
	}
	SearchCourseClassesResponse_Status_value = map[string]int32{
		"SUCCESS": 0,
		"ERROR":   -1,
	}
)

func (x SearchCourseClassesResponse_Status) Enum() *SearchCourseClassesResponse_Status {
	p := new(SearchCourseClassesResponse_Status)
	*p = x
	return p
}

func (x SearchCourseClassesResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchCourseClassesResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_courseclass_courseclass_proto_enumTypes[2].Descriptor()
}

func (SearchCourseClassesResponse_Status) Type() protoreflect.EnumType {
	return &file_proto_courseclass_courseclass_proto_enumTypes[2]
}

func (x SearchCourseClassesResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchCourseClassesResponse_Status.Descriptor instead.
func (SearchCourseClassesResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_courseclass_courseclass_proto_rawDescGZIP(), []int{5, 0}
}

type SearchTakeByUserResponse_Status int32

const (
	SearchTakeByUserResponse_SUCCESS SearchTakeByUserResponse_Status = 0
	SearchTakeByUserResponse_ERROR   SearchTakeByUserResponse_Status = -1
)

// Enum value maps for SearchTakeByUserResponse_Status.
var (
	SearchTakeByUserResponse_Status_name = map[int32]string{
		0:  "SUCCESS",
		-1: "ERROR",
	}
	SearchTakeByUserResponse_Status_value = map[string]int32{
		"SUCCESS": 0,
		"ERROR":   -1,
	}
)

func (x SearchTakeByUserResponse_Status) Enum() *SearchTakeByUserResponse_Status {
	p := new(SearchTakeByUserResponse_Status)
	*p = x
	return p
}

func (x SearchTakeByUserResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchTakeByUserResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_courseclass_courseclass_proto_enumTypes[3].Descriptor()
}

func (SearchTakeByUserResponse_Status) Type() protoreflect.EnumType {
	return &file_proto_courseclass_courseclass_proto_enumTypes[3]
}

func (x SearchTakeByUserResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchTakeByUserResponse_Status.Descriptor instead.
func (SearchTakeByUserResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_courseclass_courseclass_proto_rawDescGZIP(), []int{9, 0}
}

type SearchTakeByCourseResponse_Status int32

const (
	SearchTakeByCourseResponse_SUCCESS SearchTakeByCourseResponse_Status = 0
	SearchTakeByCourseResponse_ERROR   SearchTakeByCourseResponse_Status = -1
)

// Enum value maps for SearchTakeByCourseResponse_Status.
var (
	SearchTakeByCourseResponse_Status_name = map[int32]string{
		0:  "SUCCESS",
		-1: "ERROR",
	}
	SearchTakeByCourseResponse_Status_value = map[string]int32{
		"SUCCESS": 0,
		"ERROR":   -1,
	}
)

func (x SearchTakeByCourseResponse_Status) Enum() *SearchTakeByCourseResponse_Status {
	p := new(SearchTakeByCourseResponse_Status)
	*p = x
	return p
}

func (x SearchTakeByCourseResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SearchTakeByCourseResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_courseclass_courseclass_proto_enumTypes[4].Descriptor()
}

func (SearchTakeByCourseResponse_Status) Type() protoreflect.EnumType {
	return &file_proto_courseclass_courseclass_proto_enumTypes[4]
}

func (x SearchTakeByCourseResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SearchTakeByCourseResponse_Status.Descriptor instead.
func (SearchTakeByCourseResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_courseclass_courseclass_proto_rawDescGZIP(), []int{11, 0}
}

type NewCourseResponse_Status int32

const (
	NewCourseResponse_SUCCESS NewCourseResponse_Status = 0
	NewCourseResponse_ERROR   NewCourseResponse_Status = -1
)

// Enum value maps for NewCourseResponse_Status.
var (
	NewCourseResponse_Status_name = map[int32]string{
		0:  "SUCCESS",
		-1: "ERROR",
	}
	NewCourseResponse_Status_value = map[string]int32{
		"SUCCESS": 0,
		"ERROR":   -1,
	}
)

func (x NewCourseResponse_Status) Enum() *NewCourseResponse_Status {
	p := new(NewCourseResponse_Status)
	*p = x
	return p
}

func (x NewCourseResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NewCourseResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_courseclass_courseclass_proto_enumTypes[5].Descriptor()
}

func (NewCourseResponse_Status) Type() protoreflect.EnumType {
	return &file_proto_courseclass_courseclass_proto_enumTypes[5]
}

func (x NewCourseResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NewCourseResponse_Status.Descriptor instead.
func (NewCourseResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_proto_courseclass_courseclass_proto_rawDescGZIP(), []int{13, 0}
}

type CourseClass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseID     int32  `protobuf:"varint,1,opt,name=courseID,proto3" json:"courseID,omitempty"`
	CourseName   string `protobuf:"bytes,2,opt,name=courseName,proto3" json:"courseName,omitempty"`
	Introduction string `protobuf:"bytes,3,opt,name=introduction,proto3" json:"introduction,omitempty"`
	TextBooks    string `protobuf:"bytes,4,opt,name=textBooks,proto3" json:"textBooks,omitempty"`
	StartTime    int64  `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime      int64  `protobuf:"varint,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *CourseClass) Reset() {
	*x = CourseClass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_courseclass_courseclass_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseClass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseClass) ProtoMessage() {}

func (x *CourseClass) ProtoReflect() protoreflect.Message {
	mi := &file_proto_courseclass_courseclass_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseClass.ProtoReflect.Descriptor instead.
func (*CourseClass) Descriptor() ([]byte, []int) {
	return file_proto_courseclass_courseclass_proto_rawDescGZIP(), []int{0}
}

func (x *CourseClass) GetCourseID() int32 {
	if x != nil {
		return x.CourseID
	}
	return 0
}

func (x *CourseClass) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

func (x *CourseClass) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *CourseClass) GetTextBooks() string {
	if x != nil {
		return x.TextBooks
	}
	return ""
}

func (x *CourseClass) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CourseClass) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type CourseID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CourseID int32 `protobuf:"varint,1,opt,name=courseID,proto3" json:"courseID,omitempty"`
}

func (x *CourseID) Reset() {
	*x = CourseID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_courseclass_courseclass_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseID) ProtoMessage() {}

func (x *CourseID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_courseclass_courseclass_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseID.ProtoReflect.Descriptor instead.
func (*CourseID) Descriptor() ([]byte, []int) {
	return file_proto_courseclass_courseclass_proto_rawDescGZIP(), []int{1}
}

func (x *CourseID) GetCourseID() int32 {
	if x != nil {
		return x.CourseID
	}
	return 0
}

type CourseIDArray struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IDArray []int32 `protobuf:"varint,1,rep,packed,name=IDArray,proto3" json:"IDArray,omitempty"`
}

func (x *CourseIDArray) Reset() {
	*x = CourseIDArray{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_courseclass_courseclass_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CourseIDArray) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CourseIDArray) ProtoMessage() {}

func (x *CourseIDArray) ProtoReflect() protoreflect.Message {
	mi := &file_proto_courseclass_courseclass_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CourseIDArray.ProtoReflect.Descriptor instead.
func (*CourseIDArray) Descriptor() ([]byte, []int) {
	return file_proto_courseclass_courseclass_proto_rawDescGZIP(), []int{2}
}

func (x *CourseIDArray) GetIDArray() []int32 {
	if x != nil {
		return x.IDArray
	}
	return nil
}

type EditResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status EditResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=go.micro.service.courseclass.EditResponse_Status" json:"status,omitempty"`
	Msg    string              `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *EditResponse) Reset() {
	*x = EditResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_courseclass_courseclass_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditResponse) ProtoMessage() {}

func (x *EditResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_courseclass_courseclass_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditResponse.ProtoReflect.Descriptor instead.
func (*EditResponse) Descriptor() ([]byte, []int) {
	return file_proto_courseclass_courseclass_proto_rawDescGZIP(), []int{3}
}

func (x *EditResponse) GetStatus() EditResponse_Status {
	if x != nil {
		return x.Status
	}
	return EditResponse_SUCCESS
}

func (x *EditResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type SearchCourseClassResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      SearchCourseClassResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=go.micro.service.courseclass.SearchCourseClassResponse_Status" json:"status,omitempty"`
	Msg         string                           `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Courseclass *CourseClass                     `protobuf:"bytes,3,opt,name=courseclass,proto3" json:"courseclass,omitempty"`
}

func (x *SearchCourseClassResponse) Reset() {
	*x = SearchCourseClassResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_courseclass_courseclass_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCourseClassResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCourseClassResponse) ProtoMessage() {}

func (x *SearchCourseClassResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_courseclass_courseclass_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCourseClassResponse.ProtoReflect.Descriptor instead.
func (*SearchCourseClassResponse) Descriptor() ([]byte, []int) {
	return file_proto_courseclass_courseclass_proto_rawDescGZIP(), []int{4}
}

func (x *SearchCourseClassResponse) GetStatus() SearchCourseClassResponse_Status {
	if x != nil {
		return x.Status
	}
	return SearchCourseClassResponse_SUCCESS
}

func (x *SearchCourseClassResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SearchCourseClassResponse) GetCourseclass() *CourseClass {
	if x != nil {
		return x.Courseclass
	}
	return nil
}

type SearchCourseClassesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status        SearchCourseClassesResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=go.micro.service.courseclass.SearchCourseClassesResponse_Status" json:"status,omitempty"`
	Msg           string                             `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Courseclasses []*CourseClass                     `protobuf:"bytes,3,rep,name=courseclasses,proto3" json:"courseclasses,omitempty"`
}

func (x *SearchCourseClassesResponse) Reset() {
	*x = SearchCourseClassesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_courseclass_courseclass_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCourseClassesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCourseClassesResponse) ProtoMessage() {}

func (x *SearchCourseClassesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_courseclass_courseclass_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCourseClassesResponse.ProtoReflect.Descriptor instead.
func (*SearchCourseClassesResponse) Descriptor() ([]byte, []int) {
	return file_proto_courseclass_courseclass_proto_rawDescGZIP(), []int{5}
}

func (x *SearchCourseClassesResponse) GetStatus() SearchCourseClassesResponse_Status {
	if x != nil {
		return x.Status
	}
	return SearchCourseClassesResponse_SUCCESS
}

func (x *SearchCourseClassesResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SearchCourseClassesResponse) GetCourseclasses() []*CourseClass {
	if x != nil {
		return x.Courseclasses
	}
	return nil
}

type UserID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int32 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *UserID) Reset() {
	*x = UserID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_courseclass_courseclass_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserID) ProtoMessage() {}

func (x *UserID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_courseclass_courseclass_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserID.ProtoReflect.Descriptor instead.
func (*UserID) Descriptor() ([]byte, []int) {
	return file_proto_courseclass_courseclass_proto_rawDescGZIP(), []int{6}
}

func (x *UserID) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type UserCourse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   int32 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CourseID int32 `protobuf:"varint,2,opt,name=courseID,proto3" json:"courseID,omitempty"`
}

func (x *UserCourse) Reset() {
	*x = UserCourse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_courseclass_courseclass_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserCourse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserCourse) ProtoMessage() {}

func (x *UserCourse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_courseclass_courseclass_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserCourse.ProtoReflect.Descriptor instead.
func (*UserCourse) Descriptor() ([]byte, []int) {
	return file_proto_courseclass_courseclass_proto_rawDescGZIP(), []int{7}
}

func (x *UserCourse) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *UserCourse) GetCourseID() int32 {
	if x != nil {
		return x.CourseID
	}
	return 0
}

type Take struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   int32 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CourseID int32 `protobuf:"varint,2,opt,name=courseID,proto3" json:"courseID,omitempty"`
	Role     int32 `protobuf:"varint,3,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *Take) Reset() {
	*x = Take{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_courseclass_courseclass_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Take) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Take) ProtoMessage() {}

func (x *Take) ProtoReflect() protoreflect.Message {
	mi := &file_proto_courseclass_courseclass_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Take.ProtoReflect.Descriptor instead.
func (*Take) Descriptor() ([]byte, []int) {
	return file_proto_courseclass_courseclass_proto_rawDescGZIP(), []int{8}
}

func (x *Take) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Take) GetCourseID() int32 {
	if x != nil {
		return x.CourseID
	}
	return 0
}

func (x *Take) GetRole() int32 {
	if x != nil {
		return x.Role
	}
	return 0
}

type SearchTakeByUserResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  SearchTakeByUserResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=go.micro.service.courseclass.SearchTakeByUserResponse_Status" json:"status,omitempty"`
	Msg     string                          `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Courses []*CourseClass                  `protobuf:"bytes,3,rep,name=courses,proto3" json:"courses,omitempty"`
}

func (x *SearchTakeByUserResponse) Reset() {
	*x = SearchTakeByUserResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_courseclass_courseclass_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTakeByUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTakeByUserResponse) ProtoMessage() {}

func (x *SearchTakeByUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_courseclass_courseclass_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTakeByUserResponse.ProtoReflect.Descriptor instead.
func (*SearchTakeByUserResponse) Descriptor() ([]byte, []int) {
	return file_proto_courseclass_courseclass_proto_rawDescGZIP(), []int{9}
}

func (x *SearchTakeByUserResponse) GetStatus() SearchTakeByUserResponse_Status {
	if x != nil {
		return x.Status
	}
	return SearchTakeByUserResponse_SUCCESS
}

func (x *SearchTakeByUserResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SearchTakeByUserResponse) GetCourses() []*CourseClass {
	if x != nil {
		return x.Courses
	}
	return nil
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID   int32  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	UserType int32  `protobuf:"varint,2,opt,name=userType,proto3" json:"userType,omitempty"`
	UserName string `protobuf:"bytes,3,opt,name=userName,proto3" json:"userName,omitempty"`
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	School   string `protobuf:"bytes,5,opt,name=school,proto3" json:"school,omitempty"`
	Id       string `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`
	Phone    string `protobuf:"bytes,7,opt,name=phone,proto3" json:"phone,omitempty"`
	Email    string `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_courseclass_courseclass_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_proto_courseclass_courseclass_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_proto_courseclass_courseclass_proto_rawDescGZIP(), []int{10}
}

func (x *User) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *User) GetUserType() int32 {
	if x != nil {
		return x.UserType
	}
	return 0
}

func (x *User) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *User) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *User) GetSchool() string {
	if x != nil {
		return x.School
	}
	return ""
}

func (x *User) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *User) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type SearchTakeByCourseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status SearchTakeByCourseResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=go.micro.service.courseclass.SearchTakeByCourseResponse_Status" json:"status,omitempty"`
	Msg    string                            `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Users  []*User                           `protobuf:"bytes,3,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *SearchTakeByCourseResponse) Reset() {
	*x = SearchTakeByCourseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_courseclass_courseclass_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchTakeByCourseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchTakeByCourseResponse) ProtoMessage() {}

func (x *SearchTakeByCourseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_courseclass_courseclass_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchTakeByCourseResponse.ProtoReflect.Descriptor instead.
func (*SearchTakeByCourseResponse) Descriptor() ([]byte, []int) {
	return file_proto_courseclass_courseclass_proto_rawDescGZIP(), []int{11}
}

func (x *SearchTakeByCourseResponse) GetStatus() SearchTakeByCourseResponse_Status {
	if x != nil {
		return x.Status
	}
	return SearchTakeByCourseResponse_SUCCESS
}

func (x *SearchTakeByCourseResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SearchTakeByCourseResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

type NewCourseMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID       int32  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	CourseName   string `protobuf:"bytes,2,opt,name=courseName,proto3" json:"courseName,omitempty"`
	Introduction string `protobuf:"bytes,3,opt,name=introduction,proto3" json:"introduction,omitempty"`
	TextBooks    string `protobuf:"bytes,4,opt,name=textBooks,proto3" json:"textBooks,omitempty"`
	StartTime    int64  `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime      int64  `protobuf:"varint,6,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *NewCourseMessage) Reset() {
	*x = NewCourseMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_courseclass_courseclass_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewCourseMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewCourseMessage) ProtoMessage() {}

func (x *NewCourseMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_courseclass_courseclass_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewCourseMessage.ProtoReflect.Descriptor instead.
func (*NewCourseMessage) Descriptor() ([]byte, []int) {
	return file_proto_courseclass_courseclass_proto_rawDescGZIP(), []int{12}
}

func (x *NewCourseMessage) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *NewCourseMessage) GetCourseName() string {
	if x != nil {
		return x.CourseName
	}
	return ""
}

func (x *NewCourseMessage) GetIntroduction() string {
	if x != nil {
		return x.Introduction
	}
	return ""
}

func (x *NewCourseMessage) GetTextBooks() string {
	if x != nil {
		return x.TextBooks
	}
	return ""
}

func (x *NewCourseMessage) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *NewCourseMessage) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

type NewCourseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      NewCourseResponse_Status `protobuf:"varint,1,opt,name=status,proto3,enum=go.micro.service.courseclass.NewCourseResponse_Status" json:"status,omitempty"`
	Msg         string                   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Courseclass *CourseClass             `protobuf:"bytes,3,opt,name=courseclass,proto3" json:"courseclass,omitempty"`
}

func (x *NewCourseResponse) Reset() {
	*x = NewCourseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_courseclass_courseclass_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewCourseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewCourseResponse) ProtoMessage() {}

func (x *NewCourseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_courseclass_courseclass_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewCourseResponse.ProtoReflect.Descriptor instead.
func (*NewCourseResponse) Descriptor() ([]byte, []int) {
	return file_proto_courseclass_courseclass_proto_rawDescGZIP(), []int{13}
}

func (x *NewCourseResponse) GetStatus() NewCourseResponse_Status {
	if x != nil {
		return x.Status
	}
	return NewCourseResponse_SUCCESS
}

func (x *NewCourseResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *NewCourseResponse) GetCourseclass() *CourseClass {
	if x != nil {
		return x.Courseclass
	}
	return nil
}

var File_proto_courseclass_courseclass_proto protoreflect.FileDescriptor

var file_proto_courseclass_courseclass_proto_rawDesc = []byte{
	0x0a, 0x23, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x2f, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x22, 0xc3, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x42, 0x6f, 0x6f, 0x6b,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x26, 0x0a, 0x08, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x44, 0x22, 0x29, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x41, 0x72, 0x72,
	0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x49, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x07, 0x49, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x22, 0x96, 0x01, 0x0a,
	0x0c, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e,
	0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x64, 0x69,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x29, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0x01, 0x22, 0xfd, 0x01, 0x0a, 0x19, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x3e, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x4b, 0x0a,
	0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73,
	0x73, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0b, 0x63,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x29, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0x01, 0x22, 0x85, 0x02, 0x0a, 0x1b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x40, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x4f, 0x0a, 0x0d, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x0d, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x65, 0x73, 0x22, 0x29, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x05, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x22, 0x20, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22,
	0x40, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49,
	0x44, 0x22, 0x4e, 0x0a, 0x04, 0x54, 0x61, 0x6b, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x12, 0x12, 0x0a,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x22, 0xf3, 0x01, 0x0a, 0x18, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x6b, 0x65,
	0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d,
	0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x6b, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x43, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x73, 0x22, 0x29, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53,
	0x53, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x22, 0xc6, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x22, 0xec, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x6b, 0x65, 0x42,
	0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x57, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x3f, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x6b, 0x65, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x38, 0x0a, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x6f, 0x2e, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75,
	0x73, 0x65, 0x72, 0x73, 0x22, 0x29, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b,
	0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x05, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x22,
	0xc4, 0x01, 0x0a, 0x10, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x78, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x42, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xed, 0x01, 0x0a, 0x11, 0x4e, 0x65, 0x77, 0x43, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x67,
	0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4e, 0x65, 0x77, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x4b,
	0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x0b,
	0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x22, 0x29, 0x0a, 0x06, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x32, 0xcb, 0x0a, 0x0a, 0x12, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x69, 0x0a,
	0x0e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12,
	0x29, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43,
	0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x1a, 0x2a, 0x2e, 0x67, 0x6f, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x26, 0x2e,
	0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x49, 0x44, 0x1a, 0x2a, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6c, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x29, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x1a, 0x2a, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x76, 0x0a, 0x11, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x26, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x1a, 0x37,
	0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7f, 0x0a, 0x13, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73,
	0x12, 0x2b, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x41, 0x72, 0x72, 0x61, 0x79, 0x1a, 0x39, 0x2e,
	0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6e, 0x0a, 0x09, 0x4e, 0x65,
	0x77, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x12, 0x2e, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x2f, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x4e, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x07, 0x41, 0x64,
	0x64, 0x54, 0x61, 0x6b, 0x65, 0x12, 0x22, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x2e, 0x54, 0x61, 0x6b, 0x65, 0x1a, 0x2a, 0x2e, 0x67, 0x6f, 0x2e, 0x6d,
	0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75,
	0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x64, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x54, 0x61, 0x6b, 0x65, 0x12, 0x28, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x1a,
	0x2a, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x45,
	0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a,
	0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x61, 0x6b, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x24, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x2a, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63,
	0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73,
	0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54,
	0x61, 0x6b, 0x65, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x12, 0x26, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x1a, 0x2a, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x45, 0x64, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x72, 0x0a, 0x10, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x54, 0x61, 0x6b, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x67, 0x6f, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x1a, 0x36, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x6b, 0x65, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x12, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x54, 0x61, 0x6b, 0x65, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65,
	0x12, 0x26, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e,
	0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x49, 0x44, 0x1a, 0x38, 0x2e, 0x67, 0x6f, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x63, 0x6f, 0x75, 0x72,
	0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x61,
	0x6b, 0x65, 0x42, 0x79, 0x43, 0x6f, 0x75, 0x72, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x13, 0x5a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f,
	0x75, 0x72, 0x73, 0x65, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_courseclass_courseclass_proto_rawDescOnce sync.Once
	file_proto_courseclass_courseclass_proto_rawDescData = file_proto_courseclass_courseclass_proto_rawDesc
)

func file_proto_courseclass_courseclass_proto_rawDescGZIP() []byte {
	file_proto_courseclass_courseclass_proto_rawDescOnce.Do(func() {
		file_proto_courseclass_courseclass_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_courseclass_courseclass_proto_rawDescData)
	})
	return file_proto_courseclass_courseclass_proto_rawDescData
}

var file_proto_courseclass_courseclass_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_proto_courseclass_courseclass_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_courseclass_courseclass_proto_goTypes = []interface{}{
	(EditResponse_Status)(0),                // 0: go.micro.service.courseclass.EditResponse.Status
	(SearchCourseClassResponse_Status)(0),   // 1: go.micro.service.courseclass.SearchCourseClassResponse.Status
	(SearchCourseClassesResponse_Status)(0), // 2: go.micro.service.courseclass.SearchCourseClassesResponse.Status
	(SearchTakeByUserResponse_Status)(0),    // 3: go.micro.service.courseclass.SearchTakeByUserResponse.Status
	(SearchTakeByCourseResponse_Status)(0),  // 4: go.micro.service.courseclass.SearchTakeByCourseResponse.Status
	(NewCourseResponse_Status)(0),           // 5: go.micro.service.courseclass.NewCourseResponse.Status
	(*CourseClass)(nil),                     // 6: go.micro.service.courseclass.CourseClass
	(*CourseID)(nil),                        // 7: go.micro.service.courseclass.CourseID
	(*CourseIDArray)(nil),                   // 8: go.micro.service.courseclass.CourseIDArray
	(*EditResponse)(nil),                    // 9: go.micro.service.courseclass.EditResponse
	(*SearchCourseClassResponse)(nil),       // 10: go.micro.service.courseclass.SearchCourseClassResponse
	(*SearchCourseClassesResponse)(nil),     // 11: go.micro.service.courseclass.SearchCourseClassesResponse
	(*UserID)(nil),                          // 12: go.micro.service.courseclass.UserID
	(*UserCourse)(nil),                      // 13: go.micro.service.courseclass.UserCourse
	(*Take)(nil),                            // 14: go.micro.service.courseclass.Take
	(*SearchTakeByUserResponse)(nil),        // 15: go.micro.service.courseclass.SearchTakeByUserResponse
	(*User)(nil),                            // 16: go.micro.service.courseclass.User
	(*SearchTakeByCourseResponse)(nil),      // 17: go.micro.service.courseclass.SearchTakeByCourseResponse
	(*NewCourseMessage)(nil),                // 18: go.micro.service.courseclass.NewCourseMessage
	(*NewCourseResponse)(nil),               // 19: go.micro.service.courseclass.NewCourseResponse
}
var file_proto_courseclass_courseclass_proto_depIdxs = []int32{
	0,  // 0: go.micro.service.courseclass.EditResponse.status:type_name -> go.micro.service.courseclass.EditResponse.Status
	1,  // 1: go.micro.service.courseclass.SearchCourseClassResponse.status:type_name -> go.micro.service.courseclass.SearchCourseClassResponse.Status
	6,  // 2: go.micro.service.courseclass.SearchCourseClassResponse.courseclass:type_name -> go.micro.service.courseclass.CourseClass
	2,  // 3: go.micro.service.courseclass.SearchCourseClassesResponse.status:type_name -> go.micro.service.courseclass.SearchCourseClassesResponse.Status
	6,  // 4: go.micro.service.courseclass.SearchCourseClassesResponse.courseclasses:type_name -> go.micro.service.courseclass.CourseClass
	3,  // 5: go.micro.service.courseclass.SearchTakeByUserResponse.status:type_name -> go.micro.service.courseclass.SearchTakeByUserResponse.Status
	6,  // 6: go.micro.service.courseclass.SearchTakeByUserResponse.courses:type_name -> go.micro.service.courseclass.CourseClass
	4,  // 7: go.micro.service.courseclass.SearchTakeByCourseResponse.status:type_name -> go.micro.service.courseclass.SearchTakeByCourseResponse.Status
	16, // 8: go.micro.service.courseclass.SearchTakeByCourseResponse.users:type_name -> go.micro.service.courseclass.User
	5,  // 9: go.micro.service.courseclass.NewCourseResponse.status:type_name -> go.micro.service.courseclass.NewCourseResponse.Status
	6,  // 10: go.micro.service.courseclass.NewCourseResponse.courseclass:type_name -> go.micro.service.courseclass.CourseClass
	6,  // 11: go.micro.service.courseclass.CourseClassService.AddCourseClass:input_type -> go.micro.service.courseclass.CourseClass
	7,  // 12: go.micro.service.courseclass.CourseClassService.DeleteCourseClass:input_type -> go.micro.service.courseclass.CourseID
	6,  // 13: go.micro.service.courseclass.CourseClassService.UpdateCourseClass:input_type -> go.micro.service.courseclass.CourseClass
	7,  // 14: go.micro.service.courseclass.CourseClassService.SearchCourseClass:input_type -> go.micro.service.courseclass.CourseID
	8,  // 15: go.micro.service.courseclass.CourseClassService.SearchCourseClasses:input_type -> go.micro.service.courseclass.CourseIDArray
	18, // 16: go.micro.service.courseclass.CourseClassService.NewCourse:input_type -> go.micro.service.courseclass.NewCourseMessage
	14, // 17: go.micro.service.courseclass.CourseClassService.AddTake:input_type -> go.micro.service.courseclass.Take
	13, // 18: go.micro.service.courseclass.CourseClassService.DeleteTake:input_type -> go.micro.service.courseclass.UserCourse
	12, // 19: go.micro.service.courseclass.CourseClassService.DeleteTakeByUser:input_type -> go.micro.service.courseclass.UserID
	7,  // 20: go.micro.service.courseclass.CourseClassService.DeleteTakeByCourseClass:input_type -> go.micro.service.courseclass.CourseID
	12, // 21: go.micro.service.courseclass.CourseClassService.SearchTakeByUser:input_type -> go.micro.service.courseclass.UserID
	7,  // 22: go.micro.service.courseclass.CourseClassService.SearchTakeByCourse:input_type -> go.micro.service.courseclass.CourseID
	9,  // 23: go.micro.service.courseclass.CourseClassService.AddCourseClass:output_type -> go.micro.service.courseclass.EditResponse
	9,  // 24: go.micro.service.courseclass.CourseClassService.DeleteCourseClass:output_type -> go.micro.service.courseclass.EditResponse
	9,  // 25: go.micro.service.courseclass.CourseClassService.UpdateCourseClass:output_type -> go.micro.service.courseclass.EditResponse
	10, // 26: go.micro.service.courseclass.CourseClassService.SearchCourseClass:output_type -> go.micro.service.courseclass.SearchCourseClassResponse
	11, // 27: go.micro.service.courseclass.CourseClassService.SearchCourseClasses:output_type -> go.micro.service.courseclass.SearchCourseClassesResponse
	19, // 28: go.micro.service.courseclass.CourseClassService.NewCourse:output_type -> go.micro.service.courseclass.NewCourseResponse
	9,  // 29: go.micro.service.courseclass.CourseClassService.AddTake:output_type -> go.micro.service.courseclass.EditResponse
	9,  // 30: go.micro.service.courseclass.CourseClassService.DeleteTake:output_type -> go.micro.service.courseclass.EditResponse
	9,  // 31: go.micro.service.courseclass.CourseClassService.DeleteTakeByUser:output_type -> go.micro.service.courseclass.EditResponse
	9,  // 32: go.micro.service.courseclass.CourseClassService.DeleteTakeByCourseClass:output_type -> go.micro.service.courseclass.EditResponse
	15, // 33: go.micro.service.courseclass.CourseClassService.SearchTakeByUser:output_type -> go.micro.service.courseclass.SearchTakeByUserResponse
	17, // 34: go.micro.service.courseclass.CourseClassService.SearchTakeByCourse:output_type -> go.micro.service.courseclass.SearchTakeByCourseResponse
	23, // [23:35] is the sub-list for method output_type
	11, // [11:23] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto_courseclass_courseclass_proto_init() }
func file_proto_courseclass_courseclass_proto_init() {
	if File_proto_courseclass_courseclass_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_courseclass_courseclass_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseClass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_courseclass_courseclass_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_courseclass_courseclass_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CourseIDArray); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_courseclass_courseclass_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_courseclass_courseclass_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCourseClassResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_courseclass_courseclass_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCourseClassesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_courseclass_courseclass_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_courseclass_courseclass_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserCourse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_courseclass_courseclass_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Take); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_courseclass_courseclass_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTakeByUserResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_courseclass_courseclass_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_courseclass_courseclass_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchTakeByCourseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_courseclass_courseclass_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewCourseMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_courseclass_courseclass_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewCourseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_courseclass_courseclass_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_courseclass_courseclass_proto_goTypes,
		DependencyIndexes: file_proto_courseclass_courseclass_proto_depIdxs,
		EnumInfos:         file_proto_courseclass_courseclass_proto_enumTypes,
		MessageInfos:      file_proto_courseclass_courseclass_proto_msgTypes,
	}.Build()
	File_proto_courseclass_courseclass_proto = out.File
	file_proto_courseclass_courseclass_proto_rawDesc = nil
	file_proto_courseclass_courseclass_proto_goTypes = nil
	file_proto_courseclass_courseclass_proto_depIdxs = nil
}
